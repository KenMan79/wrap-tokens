/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IERC1155ViewsInterface extends ethers.utils.Interface {
  functions: {
    "decimals(uint256)": FunctionFragment;
    "name(uint256)": FunctionFragment;
    "symbol(uint256)": FunctionFragment;
    "totalSupply(uint256)": FunctionFragment;
    "uri(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "decimals",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "name", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "symbol",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "uri", values: [BigNumberish]): string;

  decodeFunctionResult(functionFragment: "decimals", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "uri", data: BytesLike): Result;

  events: {};
}

export class IERC1155Views extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IERC1155ViewsInterface;

  functions: {
    decimals(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    name(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    symbol(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    totalSupply(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    uri(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;
  };

  decimals(_id: BigNumberish, overrides?: CallOverrides): Promise<number>;

  name(_id: BigNumberish, overrides?: CallOverrides): Promise<string>;

  symbol(_id: BigNumberish, overrides?: CallOverrides): Promise<string>;

  totalSupply(_id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

  uri(_id: BigNumberish, overrides?: CallOverrides): Promise<string>;

  staticCall: {
    decimals(_id: BigNumberish, overrides?: CallOverrides): Promise<number>;

    name(_id: BigNumberish, overrides?: CallOverrides): Promise<string>;

    symbol(_id: BigNumberish, overrides?: CallOverrides): Promise<string>;

    totalSupply(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    uri(_id: BigNumberish, overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    decimals(_id: BigNumberish): Promise<BigNumber>;
    name(_id: BigNumberish): Promise<BigNumber>;
    symbol(_id: BigNumberish): Promise<BigNumber>;
    totalSupply(_id: BigNumberish): Promise<BigNumber>;
    uri(_id: BigNumberish): Promise<BigNumber>;
  };

  populateTransaction: {
    decimals(_id: BigNumberish): Promise<PopulatedTransaction>;
    name(_id: BigNumberish): Promise<PopulatedTransaction>;
    symbol(_id: BigNumberish): Promise<PopulatedTransaction>;
    totalSupply(_id: BigNumberish): Promise<PopulatedTransaction>;
    uri(_id: BigNumberish): Promise<PopulatedTransaction>;
  };
}
